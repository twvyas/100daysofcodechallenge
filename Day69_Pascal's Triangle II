Topic : Pascal's Triangle II

Problem :
Given an integer rowIndex, return the rowIndexth (0-indexed) row of the Pascal's triangle.
In Pascal's triangle, each number is the sum of the two numbers directly above it as shown:

Example 1:
Input: rowIndex = 3
Output: [1,3,3,1]

Example 2:
Input: rowIndex = 0
Output: [1]

Example 3:
Input: rowIndex = 1
Output: [1,1]
 

Constraints:
0 <= rowIndex <= 33

Code :
class Solution {
    public List<Integer> getRow(int r) {
        List<Integer> ans = new ArrayList<>();
        ans.add(1);
        long temp = 1;
        for(int i=1,up=r,down=1;i<=r;i++,up--, down++){
            temp=temp*up/down;
            ans.add((int)temp);
        }
        return ans;
    }
}

Case 1:
Input
rowIndex =
3
Output
[1,3,3,1]
Expected
[1,3,3,1]

Case 2:
Input
rowIndex =
0
Output
[1]
Expected
[1]

Case 3:
Input
rowIndex =
1
Output
[1,1]
Expected
[1,1]
