Topic :  Rotate Image
Problem :
You are given an n x n 2D matrix representing an image, rotate the image by 90 degrees (clockwise).

You have to rotate the image in-place, which means you have to modify the input 2D matrix directly. DO NOT allocate another 2D matrix and do the rotation.

Example 1:
Input: matrix = [[1,2,3],[4,5,6],[7,8,9]]
Output: [[7,4,1],[8,5,2],[9,6,3]]

Example 2:
Input: matrix = [[5,1,9,11],[2,4,8,10],[13,3,6,7],[15,14,12,16]]
Output: [[15,13,2,5],[14,3,4,1],[12,6,8,9],[16,7,10,11]]

Code :
class Solution {
    public void rotate(int[][] matrix) {
         int n = matrix[0].length;
   
   for (int layer = 0; layer < n/2; layer ++) {
      for (int i=layer; i<n-layer-1; i++) {
         //take back before swap
         int temp = matrix[layer][i];

         matrix[layer][i] = matrix[n-i-1][layer];
         matrix[n-i-1][layer] = matrix[n-1-layer][n-i-1];
         matrix[n-1-layer][n-i-1] = matrix[i][n-1-layer];
         matrix[i][n-1-layer] = temp;
      }
    }
  }
}

Case 1:
Input
matrix =
[[1,2,3],[4,5,6],[7,8,9]]
Output
[[7,4,1],[8,5,2],[9,6,3]]
Expected
[[7,4,1],[8,5,2],[9,6,3]]

Case 2:
Input
matrix =
[[5,1,9,11],[2,4,8,10],[13,3,6,7],[15,14,12,16]]
Output
[[15,13,2,5],[14,3,4,1],[12,6,8,9],[16,7,10,11]]
Expected
[[15,13,2,5],[14,3,4,1],[12,6,8,9],[16,7,10,11]]


